<?php
/* +----------------------------------------------------------------------+
 * | SMS_Clickatell                                                       |
 * +----------------------------------------------------------------------+
 * | Copyright (c) 2009 Randall Rodakowski                                |
 * +----------------------------------------------------------------------+
 * +----------------------------------------------------------------------+
 * | Authors: Randall Rodakowski <randall.rodakowski@gmail.com>           |
 * +----------------------------------------------------------------------+
 */

/**
 * PHP Interface into the Clickatell API
 *
 * @author	Randall Rodakowski <Randall.Rodakowski@gmail.com>
 * @copyright	2009 Randall Rodakowski
 * @version	$Id$
 * @access	public 
 * @package	SMS
 */

class SMS_Clickatell {
    /**
     * Clickatell API Server
     * @var string
     */
    //var $_api_server = "https://api.clickatell.com";
    var $_baseurl ="http://api.clickatell.com";

   /**
     * Username from Clickatell used for authentication purposes
     * @var string
     */
    // Chnage this to be your userName
    var $_user = "User";
    /**
     * Password for Clickatell Usernaem
     * @var string
     */
    var $_password = "Password";

    /**
     * Clickatell API Server ID
     * @var string
     */
    var $_api_id = "api_id";

    /**
     * Error codes generated by Clickatell Gateway
     * @var array
     */
    var $_errors = array (
        '001' => 'Authentication failed',
        '002' => 'Unknown username or password',
        '003' => 'Session ID expired',
        '004' => 'Account frozen',
        '005' => 'Missing session ID',
        '007' => 'IP lockdown violation',
        '101' => 'Invalid or missing parameters',
        '102' => 'Invalid UDH. (User Data Header)',
        '103' => 'Unknown apismgid (API Message ID)',
        '104' => 'Unknown climsgid (Client Message ID)',
        '105' => 'Invalid Destination Address',
        '106' => 'Invalid Source Address',
        '107' => 'Empty message',
        '108' => 'Invalid or missing api_id',
        '109' => 'Missing message ID',
        '110' => 'Error with email message',
        '111' => 'Invalid Protocol',
        '112' => 'Invalid msg_type',
        '113' => 'Max message parts exceeded',
        '114' => 'Cannot route message',
        '115' => 'Message Expired',
        '116' => 'Invalid Unicode Data',
        '201' => 'Invalid batch ID',
        '202' => 'No batch template',
        '301' => 'No credit left',
        '302' => 'Max allowed credit'
    );

    /**
     * Message status
     *
     * @var array
     */
    var $_message_status = array (
        '001' => 'Message unknown',
        '002' => 'Message queued',
        '003' => 'Delivered',
        '004' => 'Received by recipient',
        '005' => 'Error with message',
        '006' => 'User cancelled message delivery',
        '007' => 'Error delivering message',
        '008' => 'OK',
        '009' => 'Routing error',
        '010' => 'Message expired',
        '011' => 'Message queued for later delivery',
        '012' => 'Out of credit'
    );

    var $_msg_types = array (
        'SMS_TEXT',
        'SMS_FLASH',
        'SMS_NOKIA_OLOGO',
        'SMS_NOKIA_GLOGO',
        'SMS_NOKIA_PICTURE',
        'SMS_NOKIA_RINGTONE',
        'SMS_NOKIA_RTTL',
        'SMS_NOKIA_CLEAN',
        'SMS_NOKIA_VCARD',
        'SMS_NOKIA_VCAL'
    );

    /**
     * Send an SMS Message via the Clickatell API Server
     *
     * @param array database result set
     *
     * @return mixed true on sucess or PEAR_Error object
     * @access public
     * @since 1.2
     */
    function sendmsg($mobileNumber, $messageText) {
        $retValue = null;
        $to = $mobileNumber; 
        $text = urlencode($messageText); 

        // auth call
        $url = "$this->_baseurl/http/auth?user=$this->_user&password=$this->_password&api_id=$this->_api_id";
        // do auth call
        $ret = file($url);
        // split our response. return string is on first line of the data returned
        $sess = split(":",$ret[0]);
        if ($sess[0] == "OK") {
            $sess_id = trim($sess[1]); // remove any whitespace
            $url = "$this->_baseurl/http/sendmsg?session_id=$sess_id&to=$to&text=$text";
            
            // do sendmsg call
            $ret = file($url);
            $send = split(":",$ret[0]);
            if ($send[0] == "ID") {
                //$retValue = "success message ID: ". $send[1];
                $retValue = true;
            }
            else {
                //$retValue = "send message failed";
                $retValue = false;
            }
        } else {
            //$retValue = "Authentication failure: ". $ret[0];
            //exit();
            $retValue = false;
        }

        return $retValue;
    }
}

